{"version":3,"sources":["fonts/Starjedi.ttf","components/Header.js","queries/filmQuery.js","queries/peopleQuery.js","queries/planetsQuery.js","queries/speciesQuery.js","components/categories/Movies.js","components/categories/People.js","components/categories/Planets.js","components/categories/Species.js","util/queryResolver.js","components/Loading.js","components/Display.js","components/StarLightButton.js","App.js","index.js"],"names":["module","exports","styles","headerStyle","background","color","imageStyle","height","margin","cropContainerStyle","width","textAlign","overflow","border","Header","style","src","alt","ALL_FILMS","gql","ALL_PEOPLE","ALL_PLANETS","ALL_SPECIES","Movies","data","console","log","allFilms","films","map","curr","idx","key","id","movieItem","titleStyle","title","episodeID","releaseDate","director","producerStyle","producers","producer","openingCrawl","borderBottom","padding","fontSize","fontFamily","borderRadius","maxWidth","display","People","allPeople","people","menuItem","headerStyles","name","gender","eyeColorDisplay","eyeColor","colorStyles","colorStyler","CSS_STYLE","Option","checkColorValidity","Number","parseInt","Math","random","Planets","allPlanets","planets","menuItems","diameter","population","rotationPeriod","climates","climate","terrains","terrain","Species","allSpecies","species","designation","classification","language","eyeColorStyles","eyeColors","justifyContent","colors","_querySelector","value","query","Loading","className","dataInteration","type","typeResolver","displayStyle","flexWrap","Display","props","error","loading","StarLightButton","onClick","e","target","handleClick","mainScreenStyles","flexDirection","menuStyles","marginTop","menuItemsStyles","App","useState","setQuery","useLazyQuery","runQuery","setType","queryResolver","useEffect","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b637f55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Starjedi.cc3019aa.ttf\";","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header style={styles.headerStyle}>\r\n      <div style={styles.cropContainerStyle}>\r\n        <img\r\n          style={styles.imageStyle}\r\n          src=\"https://fontmeme.com/permalink/200108/b0db4ffa47b7c1754a977d389ee99a76.png\"\r\n          alt=\"star-wars-font\"\r\n          border=\"0\"\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  headerStyle: {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    color: \"color\"\r\n  },\r\n  imageStyle: {\r\n    height: \"100px\",\r\n    margin: \"-29px 0px 0px -28px\"\r\n  },\r\n  cropContainerStyle: {\r\n    width: \"356px\",\r\n    textAlign: \"center\",\r\n    height: \"43px\",\r\n    overflow: \"hidden\",\r\n    border: \"5px solid black\",\r\n    margin: \"0 auto\"\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_FILMS = gql`\r\n  {\r\n    allFilms {\r\n      films {\r\n        id\r\n        title\r\n        episodeID\r\n        releaseDate\r\n        created\r\n        openingCrawl\r\n        producers\r\n        director\r\n      }\r\n    }\r\n  }\r\n`;","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_PEOPLE = gql`\r\n  {\r\n  allPeople {\r\n    people {\r\n      id\r\n      name\r\n      eyeColor\r\n      hairColor\r\n      skinColor\r\n      height\r\n      gender\r\n    }\r\n  }\r\n}\r\n`;","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_PLANETS = gql`\r\n  {\r\n    allPlanets {\r\n      planets {\r\n        id\r\n        name\r\n        diameter\r\n        population\r\n        surfaceWater\r\n        rotationPeriod\r\n        climates\r\n        orbitalPeriod\r\n        terrains\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_SPECIES = gql`\r\n  {\r\n  allSpecies {\r\n    species {\r\n          id\r\n          name\r\n          classification\r\n          designation\r\n          averageHeight\r\n          averageLifespan\r\n          eyeColors\r\n          hairColors\r\n          skinColors\r\n          language\r\n          homeworld {\r\n            name\r\n            \r\n          }\r\n        }\r\n  }\r\n}\r\n`;","import React from \"react\";\r\n\r\nconst Movies = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allFilms &&\r\n        data.allFilms.films.map((curr, idx) => (\r\n          <div key={curr.id} style={styles.movieItem}>\r\n            <div style={styles.titleStyle}>\r\n              {curr.title}\r\n            </div>\r\n            <div>\r\n              <div>\r\n                Episdoe ID: {curr.episodeID}\r\n              </div>\r\n              <div>\r\n                Release Date: {curr.releaseDate}\r\n              </div>\r\n              <div>\r\n                Director: {curr.director}\r\n              </div>\r\n              <div>\r\n                <div style={styles.producerStyle}>\r\n                Producers:\r\n                </div>\r\n              {curr.producers.map((producer, idx) => {\r\n                  return <div key={idx}>{producer}</div>\r\n                })}\r\n              </div>\r\n              <div style={styles.openingCrawl}>\r\n                Opening Crawl: {curr.openingCrawl}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  titleStyle: {\r\n    borderBottom: \"1px solid black\"\r\n  },\r\n  movieItem: {\r\n    border: \"10px solid #27c2ac\",\r\n    padding: \"10px 20px\",\r\n    margin: \"10px\",\r\n    fontSize: \"24px\",\r\n    fontFamily: \"starWarsFont\",\r\n    background: \"#45d2be\",\r\n    borderRadius: \"10px\",\r\n    color: \"black\",\r\n    maxWidth: \"380px\",\r\n  },\r\n  producerStyle: {\r\n    borderBottom: \"4px solid #5f75dd\",\r\n    display: \"inline-block\",\r\n    padding: \"10px\"\r\n  },\r\n  openingCrawl: {\r\n    fontSize: \"12px\",\r\n    padding: \"5px\"\r\n  }\r\n};\r\n\r\nexport { Movies };\r\n","import React from \"react\";\r\n\r\nconst People = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allPeople &&\r\n        data.allPeople.people.map((curr, idx) => (\r\n          <div key={curr.id} style={styles.menuItem}>\r\n            <div style={styles.headerStyles}>{curr.name}</div>\r\n            <div>Gender: {curr.gender}</div>\r\n            <div>Height: {curr.height} cm</div>\r\n            <div style={{display: \"flex\"}}><div>Eye Color: </div>{eyeColorDisplay(curr.eyeColor)}</div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  menuItem: {\r\n    border: \"10px solid #0c0b53\",\r\n    padding: \"10px 20px\",\r\n    margin: \"10px\",\r\n    fontFamily: \"starWarsFont\",\r\n    background: \"#161555\",\r\n    borderRadius: \"10px\"\r\n  },\r\n  headerStyles: {\r\n    fontSize: \"24px\",\r\n    borderBottom: \"3px solid #6c55c7\"\r\n  },\r\n  colorStyles: {\r\n    height: \"15px\",\r\n    width: \"15px\",\r\n    borderRadius: \"50%\",\r\n    padding: \"5px\",\r\n    margin: \"2px\",\r\n  }\r\n};\r\n\r\nconst checkColorValidity = color => {\r\n  let CSS_STYLE = new Option().style;\r\n  CSS_STYLE.color = color;\r\n  return CSS_STYLE.color === color;\r\n};\r\n\r\nconst colorStyler = color => {\r\n  return {\r\n    ...styles.colorStyles,\r\n    background: color\r\n  };\r\n};\r\n\r\nconst eyeColorDisplay = color => {\r\n  return color === \"n/a\" || color[0] === \"unknown\" ? (\r\n    \"N/A\"\r\n  ) : checkColorValidity(color) === true ? (\r\n    <div\r\n      style={colorStyler(color)}\r\n      key={color + Number.parseInt(Math.random() * 10000000)}\r\n    ></div>\r\n  ) : null;\r\n};\r\n\r\nexport { People };\r\n","import React from \"react\";\r\n\r\nconst Planets = ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <>\r\n      {data && data.allPlanets &&\r\n        data.allPlanets.planets.map((curr, idx) => (\r\n          <div key={curr.id} style={styles.menuItems}>\r\n            <div style={styles.headerStyles}>{curr.name}</div>\r\n            <div>Diameter: {curr.diameter}</div>\r\n            <div>Population: {curr.population}</div>\r\n            <div>Rotation Period: {curr.rotationPeriod}</div>\r\n            <div>\r\n              Climates: \r\n              {curr.climates.map((climate, idx) => {\r\n                return <span key={idx}> {climate} | </span>\r\n              })}\r\n            </div>\r\n            <div>\r\n              Terrains: \r\n              {curr.terrains.map((terrain, idx) => {\r\n                return <span key={idx}>{terrain} | </span>\r\n              })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  menuItems: {\r\n    border: \"10px solid #552f7b\",\r\n    padding: \"10px 20px\",\r\n    margin: \"10px\",\r\n    fontFamily: \"starWarsFont\",\r\n    background: \"rebeccapurple\",\r\n    borderRadius: \"10px\"\r\n  },\r\n  headerStyles: {\r\n    fontSize: \"24px\",\r\n    borderBottom: \"3px solid #6c55c7\"\r\n  },\r\n}\r\n\r\nexport { Planets };\r\n","import React from \"react\";\r\n\r\nconst Species = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allSpecies &&\r\n        data.allSpecies.species.map((curr, idx) => (\r\n          <div key={curr.id} style={styles.menuItems}>\r\n            <div style={styles.headerStyles}>{curr.name}</div>\r\n            <div>Designation: {curr.designation}</div>\r\n            <div>Classification: {curr.classification}</div>\r\n            <div>Language: {curr.language}</div>\r\n            <div>Eye Color:</div>\r\n            <div style={styles.eyeColorStyles}>\r\n              {eyeColorDisplay(curr.eyeColors)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  menuItems: {\r\n    border: \"10px solid #d1471c\",\r\n    padding: \"10px 20px\",\r\n    margin: \"10px\",\r\n    fontFamily: \"starWarsFont\",\r\n    background: \"#FF5722\",\r\n    borderRadius: \"10px\",\r\n    color: \"black\"\r\n  },\r\n  headerStyles: {\r\n    fontSize: \"24px\",\r\n    borderBottom: \"3px solid #c78455\"\r\n  },\r\n  eyeColorStyles: {\r\n    background: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\"\r\n  },\r\n  colorStyles: {\r\n    height: \"20px\",\r\n    width: \"20px\",\r\n    borderRadius: \"50%\",\r\n    padding: \"5px\",\r\n    margin: \"2px\"\r\n  }\r\n};\r\n\r\nconst checkColorValidity = color => {\r\n  let CSS_STYLE = new Option().style;\r\n  CSS_STYLE.color = color;\r\n  return CSS_STYLE.color === color;\r\n};\r\n\r\nconst colorStyler = color => {\r\n  return {\r\n    ...styles.colorStyles,\r\n    background: color\r\n  };\r\n};\r\n\r\nconst eyeColorDisplay = colors => {\r\n  return (colors[0] === \"n/a\" || colors[0] === \"unknown\")\r\n    ? \"N/A\"\r\n    : colors.map((color, idx) => {\r\n        return checkColorValidity(color) === true ? (\r\n          <div style={colorStyler(color)} key={idx+color+Number.parseInt(Math.random()*10000000)}></div>\r\n        ) : null;\r\n      });\r\n};\r\n\r\nexport { Species };\r\n","import * as query from \"../queries\";\r\nimport React from \"react\";\r\nimport { Movies, People, Planets, Species } from \"../components/categories\";\r\n\r\nexport const queryResolver = id => {\r\n  return id ? _querySelector(id) : null;\r\n};\r\n\r\nconst _querySelector = value => {\r\n  switch (value) {\r\n    case \"movies\":\r\n      return query.ALL_FILMS;\r\n    case \"people\":\r\n      return query.ALL_PEOPLE;\r\n    case \"planets\":\r\n      return query.ALL_PLANETS;\r\n    case \"species\":\r\n      return query.ALL_SPECIES;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const typeResolver = (value, data) => {\r\n  switch (value) {\r\n    case \"movies\":\r\n      return <Movies data={data} />;\r\n    case \"people\":\r\n      return <People data={data} />;\r\n    case \"planets\":\r\n      return <Planets data={data} />;\r\n    case \"species\":\r\n      return <Species data={data} />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import React from 'react'\r\nimport \"./loading.css\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            Loading....\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { typeResolver } from \"../util/queryResolver\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst dataInteration = (data, type) => {\r\n  return data ? typeResolver(type, data) : null;\r\n};\r\n\r\nconst Display = props => {\r\n  if (props.error) return <div>Error: {props.error}</div>;\r\n  if (props.loading) return <Loading />;\r\n  if(props.data)  {\r\n      return (\r\n        <div style={styles.displayStyle}>\r\n          {dataInteration(props.data, props.type)}\r\n        </div>\r\n      );\r\n  } else {\r\n      return null;\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  displayStyle: {\r\n    color: \"white\",\r\n    display: \"flex\", \r\n    flexWrap: \"wrap\",\r\n    margin: \"60px 50px\"\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport './starlightbutton.css';\r\n\r\nconst StarLightButton = (props) => {\r\n  const handleClick = (e) => {\r\n    if (props.onClick) {\r\n      props.onClick(e.target.id)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <button id={props.id} className=\"starlight-button\" onClick={(e) => handleClick(e)}>\r\n        {props.name ? props.name : \"Star Wars Light\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default StarLightButton;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\"\r\nimport Header from \"./components/Header\";\r\nimport Display from \"./components/Display\";\r\nimport StarLightButton from \"./components/StarLightButton\";\r\nimport {queryResolver} from \"./util/queryResolver\";\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(null);\r\n  const [runQuery, {loading, error, data}] = useLazyQuery(query);\r\n  const [type, setType] = useState(\"movies\");\r\n\r\n  const handleClick = (id) => {\r\n    setType(id);\r\n    setQuery(queryResolver(id));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(query) {\r\n      runQuery(query);\r\n    }\r\n  }, [query, runQuery])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div style={styles.mainScreenStyles}>\r\n        <div style={styles.menuStyles}>\r\n          <StarLightButton name=\"Movies\" onClick={handleClick} id=\"movies\"/>\r\n          <StarLightButton name=\"Species\" onClick={handleClick} id=\"species\"/>\r\n          <StarLightButton name=\"People\" onClick={handleClick} id=\"people\"/>\r\n          <StarLightButton name=\"Planets\" onClick={handleClick} id=\"planets\"/>\r\n        </div>\r\n        <>\r\n          <Display loading={loading} error={error} data={data} type={type}/>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  mainScreenStyles: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  menuStyles: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"50px\"\r\n  },\r\n  menuItemsStyles: {\r\n    color: \"white\"\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./fonts/Starjedi.ttf\";\r\nimport App from \"./App\";\r\nimport {ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: new HttpLink({\r\n    uri: \"https://swapi-graphql-ramtoo.herokuapp.com/\",\r\n    // uri: \"https://swapi-graphql.netlify.com/.netlify/functions/index\"\r\n  })\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}